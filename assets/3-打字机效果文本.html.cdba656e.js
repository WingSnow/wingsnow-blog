import{_ as t}from"./plugin-vue_export-helper.21dcd24c.js";import{o as p,c as e,d as o,b as n,e as c,a as l,r as i}from"./app.b12f069c.js";const u=n("h1",{id:"\u6253\u5B57\u673A\u6548\u679C\u6587\u672C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u6253\u5B57\u673A\u6548\u679C\u6587\u672C","aria-hidden":"true"},"#"),c(" \u6253\u5B57\u673A\u6548\u679C\u6587\u672C")],-1),r=n("img",{src:"https://img.shields.io/badge/vue-3.2-brightgreen"},null,-1),k=l(`<h2 id="\u4EE3\u7801" tabindex="-1"><a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a> \u4EE3\u7801</h2><details class="custom-container details"><summary>\u8BE6\u60C5</summary><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> ref<span class="token punctuation">,</span> computed<span class="token punctuation">,</span> onMounted <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>

<span class="token keyword">const</span> <span class="token function-variable function">TimeoutPromise</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">ms<span class="token operator">?</span><span class="token operator">:</span> number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> ms<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">interface</span> <span class="token class-name">Props</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">texts</span><span class="token operator">:</span> string<span class="token punctuation">[</span><span class="token punctuation">]</span>
  speed<span class="token operator">?</span><span class="token operator">:</span> number <span class="token operator">|</span> <span class="token string">&#39;fast&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;slow&#39;</span>
  loop<span class="token operator">?</span><span class="token operator">:</span> boolean
  clearMode<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;clear&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;backspace&#39;</span>
  delay<span class="token operator">?</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span> <span class="token operator">|</span> number
<span class="token punctuation">}</span>

<span class="token keyword">const</span> props <span class="token operator">=</span> <span class="token function">withDefaults</span><span class="token punctuation">(</span>defineProps<span class="token operator">&lt;</span>Props<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">speed</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span>
  <span class="token literal-property property">loop</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token literal-property property">clearMode</span><span class="token operator">:</span> <span class="token string">&#39;backspace&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">delay</span><span class="token operator">:</span> <span class="token string">&#39;default&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> curTextId <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> curTextPosition <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> speed <span class="token operator">=</span> <span class="token number">300</span>

<span class="token keyword">const</span> cursor <span class="token operator">=</span> <span class="token function">ref</span><span class="token punctuation">(</span><span class="token string">&#39;|&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token function">computed</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>props<span class="token punctuation">.</span>texts<span class="token punctuation">[</span>curTextId<span class="token punctuation">.</span>value<span class="token punctuation">]</span>
    <span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> curTextPosition<span class="token punctuation">.</span>value<span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&lt;br /&gt;&#39;</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>cursor<span class="token punctuation">.</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">print</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>curTextPosition<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> props<span class="token punctuation">.</span>texts<span class="token punctuation">[</span>curTextId<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    curTextPosition<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">printBack</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>curTextPosition<span class="token punctuation">.</span>value <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>clearMode <span class="token operator">===</span> <span class="token string">&#39;backspace&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
      <span class="token keyword">await</span> <span class="token function">TimeoutPromise</span><span class="token punctuation">(</span>speed <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    curTextPosition<span class="token punctuation">.</span>value <span class="token operator">-=</span> <span class="token number">1</span>
    <span class="token keyword">await</span> <span class="token function">printBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u6A21\u62DF\u7535\u8111\u5149\u6807\u95EA\u52A8\uFF0C0.53\u79D2\u95EA\u4E00\u6B21</span>
<span class="token keyword">const</span> <span class="token function-variable function">cursorFlash</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    cursor<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;&amp;nbsp;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    cursor<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;|&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">630</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">printLoop</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u6253\u5B57</span>
  <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token operator">&lt;</span><span class="token keyword">void</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> printInterval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>curTextPosition<span class="token punctuation">.</span>value <span class="token operator">&gt;=</span> props<span class="token punctuation">.</span>texts<span class="token punctuation">[</span>curTextId<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">clearInterval</span><span class="token punctuation">(</span>printInterval<span class="token punctuation">)</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> speed<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token comment">// \u6253\u5B57\u7ED3\u675F\u540E\u5149\u6807\u95EA\u52A8</span>
  <span class="token comment">// \u8BBE\u7F6EsetInterval\u524D\u8C03\u7528\u4E00\u6B21\uFF0C\u7ACB\u5373\u6267\u884C\u4E00\u6B21\uFF0C\u4E4B\u540E\u5B9A\u671F\u5FAA\u73AF\u6267\u884C</span>
  <span class="token function">cursorFlash</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> cursorFlashInterval <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>cursorFlash<span class="token punctuation">,</span> <span class="token number">1060</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> delay <span class="token operator">=</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>texts<span class="token punctuation">[</span>curTextId<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> speed
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>delay<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    delay <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>delay<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">await</span> <span class="token function">TimeoutPromise</span><span class="token punctuation">(</span>delay<span class="token punctuation">)</span>
  <span class="token comment">// \u5207\u6362\u5230\u4E0B\u4E00\u53E5\u6216\u7ED3\u675F\u5FAA\u73AF</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>curTextId<span class="token punctuation">.</span>value <span class="token operator">&lt;</span> props<span class="token punctuation">.</span>texts<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">clearInterval</span><span class="token punctuation">(</span>cursorFlashInterval<span class="token punctuation">)</span>
    <span class="token keyword">await</span> <span class="token function">printBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    curTextId<span class="token punctuation">.</span>value <span class="token operator">+=</span> <span class="token number">1</span>
    curTextPosition<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token function">printLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>loop<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">clearInterval</span><span class="token punctuation">(</span>cursorFlashInterval<span class="token punctuation">)</span>
    <span class="token keyword">await</span> <span class="token function">printBack</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    curTextId<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token function">printLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token function">onMounted</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Number<span class="token punctuation">.</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">Number</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>speed<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>speed <span class="token operator">===</span> <span class="token string">&#39;fast&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      speed <span class="token operator">=</span> <span class="token number">100</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">.</span>speed <span class="token operator">===</span> <span class="token string">&#39;slow&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      speed <span class="token operator">=</span> <span class="token number">500</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    speed <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>props<span class="token punctuation">.</span>speed<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">printLoop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4F7F\u7528" aria-hidden="true">#</a> \u4F7F\u7528</h2><h3 id="\u793A\u4F8B" tabindex="-1"><a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a> \u793A\u4F8B</h3><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// texts\uFF08\u663E\u793A\u5185\u5BB9\uFF09\u5FC5\u987B\u8BBE\u7F6E\uFF0C\u7C7B\u578B\u4E3A\u5B57\u7B26\u4E32\u6570\u7EC4\uFF0C\u591A\u6BB5\u6587\u672C\u4F9D\u6B21\u663E\u793A</span>
<span class="token operator">&lt;</span>TypeText <span class="token operator">:</span>texts<span class="token operator">=</span><span class="token string">&quot;[&#39;\u8FD9\u662F\u7B2C\u4E00\u6BB5\u6587\u5B57&#39;,&#39;\u8FD9\u662F\u7B2C\u4E8C\u6BB5&#39;]&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token comment">// \u5728\u663E\u793A\u5185\u5BB9\u4E2D\u4F7F\u7528&lt;\u6362\u884C</span>
<span class="token operator">&lt;</span>TypeText <span class="token operator">:</span>texts<span class="token operator">=</span><span class="token string">&quot;[&#39;\u8FD9\u662F&lt;\u591A\u884C\u6587\u5B57&#39;]&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token comment">// \u5FAA\u73AF\u663E\u793A</span>
<span class="token operator">&lt;</span>TypeText <span class="token operator">:</span>texts<span class="token operator">=</span><span class="token string">&quot;[&#39;\u8FD9\u662F\u7B2C\u4E00\u6BB5\u6587\u5B57&#39;,&#39;\u8FD9\u662F\u7B2C\u4E8C\u6BB5&#39;]&quot;</span> <span class="token operator">:</span>loop<span class="token operator">=</span><span class="token string">&quot;true&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token comment">// \u5207\u6362\u663E\u793A\u6BB5\u843D\u65F6\u4F7F\u7528\u6E05\u5C4F\u6A21\u5F0F\u64E6\u9664\u73B0\u6709\u6587\u5B57</span>
<span class="token operator">&lt;</span>TypeText <span class="token operator">:</span>texts<span class="token operator">=</span><span class="token string">&quot;[&#39;\u8FD9\u662F\u7B2C\u4E00\u6BB5\u6587\u5B57&#39;,&#39;\u8FD9\u662F\u7B2C\u4E8C\u6BB5&#39;]&quot;</span> clearMode<span class="token operator">=</span><span class="token string">&quot;clear&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token comment">// \u7B49\u5F851s\u540E\u5207\u6362\u663E\u793A\u6BB5\u843D</span>
<span class="token operator">&lt;</span>TypeText <span class="token operator">:</span>texts<span class="token operator">=</span><span class="token string">&quot;[&#39;\u8FD9\u662F\u7B2C\u4E00\u6BB5\u6587\u5B57&#39;,&#39;\u8FD9\u662F\u7B2C\u4E8C\u6BB5&#39;]&quot;</span> <span class="token operator">:</span>delay<span class="token operator">=</span><span class="token string">&quot;1000&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>

<span class="token comment">// \u8BBE\u7F6E\u663E\u793A\u901F\u5EA6</span>
<span class="token operator">&lt;</span>TypeText <span class="token operator">:</span>texts<span class="token operator">=</span><span class="token string">&quot;[&#39;\u8FD9\u662F\u7B2C\u4E00\u6BB5\u6587\u5B57&#39;,&#39;\u8FD9\u662F\u7B2C\u4E8C\u6BB5&#39;]&quot;</span> speed<span class="token operator">=</span><span class="token string">&quot;fast&quot;</span> <span class="token operator">/</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="api" tabindex="-1"><a class="header-anchor" href="#api" aria-hidden="true">#</a> API</h3><table><thead><tr><th>\u53C2\u6570</th><th>\u8BF4\u660E</th><th style="text-align:center;">\u7C7B\u578B</th><th style="text-align:center;">\u9ED8\u8BA4\u503C</th></tr></thead><tbody><tr><td>texts</td><td>\u663E\u793A\u5185\u5BB9</td><td style="text-align:center;">string[]</td><td style="text-align:center;">-</td></tr><tr><td>loop</td><td>\u662F\u5426\u5FAA\u73AF\u663E\u793A</td><td style="text-align:center;">boolean</td><td style="text-align:center;">false</td></tr><tr><td>clearMode</td><td>\u5207\u6362\u663E\u793A\u6BB5\u843D\u7684\u6A21\u5F0F</td><td style="text-align:center;"><code>&#39;clear&#39;</code> | <code>&#39;backspace&#39;</code></td><td style="text-align:center;"><code>&#39;backspace&#39;</code></td></tr><tr><td>delay</td><td>\u5207\u6362\u663E\u793A\u6BB5\u843D\u7684\u5EF6\u8FDF\uFF0C\u5355\u4F4D\u4E3Ams</td><td style="text-align:center;">number | <code>&#39;default&#39;</code></td><td style="text-align:center;"><code>&#39;default&#39;</code></td></tr><tr><td>speed</td><td>\u663E\u793A\u901F\u5EA6\uFF0C<code>&#39;fast&#39;</code>\u548C<code>&#39;slow&#39;</code>\u5BF9\u5E94\u7684\u901F\u5EA6\u503C\u5206\u522B\u4E3A<code>100</code>\u548C<code>500</code></td><td style="text-align:center;">number | <code>&#39;fast&#39;</code> | <code>&#39;slow&#39;</code></td><td style="text-align:center;">300</td></tr></tbody></table>`,7),d={__name:"3-\u6253\u5B57\u673A\u6548\u679C\u6587\u672C.html",setup(v){const s=["\u5927\u6C5F\u4E1C\u53BB\uFF0C\u6D6A\u6DD8\u5C3D\uFF0C\u5343\u53E4\u98CE\u6D41\u4EBA\u7269\u3002","\u6545\u5792\u897F\u8FB9\uFF0C\u4EBA\u9053\u662F\uFF0C\u4E09\u56FD\u5468\u90CE\u8D64\u58C1\u3002","\u4E71\u77F3\u7A7F\u7A7A\uFF0C\u60CA\u6D9B\u62CD\u5CB8\uFF0C\u5377\u8D77\u5343\u5806\u96EA\u3002","\u6C5F\u5C71\u5982\u753B\uFF0C<\u4E00\u65F6\u591A\u5C11\u8C6A\u6770\u3002"];return(m,b)=>{const a=i("TyperText");return p(),e("div",null,[u,r,o(a,{texts:s,loop:!0,delay:1e3}),k])}}};var f=t(d,[["__file","3-\u6253\u5B57\u673A\u6548\u679C\u6587\u672C.html.vue"]]);export{f as default};
